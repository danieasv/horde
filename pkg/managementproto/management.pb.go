// Code generated by protoc-gen-go. DO NOT EDIT.
// source: management.proto

package managementproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Result is included in the response messages to indicate success/failure.
// the Result message will always be set but the actual values might be
// invalid.
type Result struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Error                string   `protobuf:"bytes,2,opt,name=Error,proto3" json:"Error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{0}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Result) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type APN struct {
	ApnID                int32    `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APN) Reset()         { *m = APN{} }
func (m *APN) String() string { return proto.CompactTextString(m) }
func (*APN) ProtoMessage()    {}
func (*APN) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{1}
}

func (m *APN) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APN.Unmarshal(m, b)
}
func (m *APN) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APN.Marshal(b, m, deterministic)
}
func (m *APN) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APN.Merge(m, src)
}
func (m *APN) XXX_Size() int {
	return xxx_messageInfo_APN.Size(m)
}
func (m *APN) XXX_DiscardUnknown() {
	xxx_messageInfo_APN.DiscardUnknown(m)
}

var xxx_messageInfo_APN proto.InternalMessageInfo

func (m *APN) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *APN) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// NASRange represents a single Network Authentication Server that emits
// RADIUS requests. Each server expects a particular range.
type NASRange struct {
	NasID                int32    `protobuf:"varint,1,opt,name=NasID,proto3" json:"NasID,omitempty"`
	NasIdentifier        string   `protobuf:"bytes,2,opt,name=NasIdentifier,proto3" json:"NasIdentifier,omitempty"`
	CIDR                 string   `protobuf:"bytes,3,opt,name=CIDR,proto3" json:"CIDR,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NASRange) Reset()         { *m = NASRange{} }
func (m *NASRange) String() string { return proto.CompactTextString(m) }
func (*NASRange) ProtoMessage()    {}
func (*NASRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{2}
}

func (m *NASRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NASRange.Unmarshal(m, b)
}
func (m *NASRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NASRange.Marshal(b, m, deterministic)
}
func (m *NASRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NASRange.Merge(m, src)
}
func (m *NASRange) XXX_Size() int {
	return xxx_messageInfo_NASRange.Size(m)
}
func (m *NASRange) XXX_DiscardUnknown() {
	xxx_messageInfo_NASRange.DiscardUnknown(m)
}

var xxx_messageInfo_NASRange proto.InternalMessageInfo

func (m *NASRange) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

func (m *NASRange) GetNasIdentifier() string {
	if m != nil {
		return m.NasIdentifier
	}
	return ""
}

func (m *NASRange) GetCIDR() string {
	if m != nil {
		return m.CIDR
	}
	return ""
}

// APNConfig is configuration for an entire APN.
type APNConfig struct {
	APN                  *APN        `protobuf:"bytes,1,opt,name=APN,proto3" json:"APN,omitempty"`
	NasRanges            []*NASRange `protobuf:"bytes,3,rep,name=NasRanges,proto3" json:"NasRanges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *APNConfig) Reset()         { *m = APNConfig{} }
func (m *APNConfig) String() string { return proto.CompactTextString(m) }
func (*APNConfig) ProtoMessage()    {}
func (*APNConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{3}
}

func (m *APNConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNConfig.Unmarshal(m, b)
}
func (m *APNConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNConfig.Marshal(b, m, deterministic)
}
func (m *APNConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNConfig.Merge(m, src)
}
func (m *APNConfig) XXX_Size() int {
	return xxx_messageInfo_APNConfig.Size(m)
}
func (m *APNConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_APNConfig.DiscardUnknown(m)
}

var xxx_messageInfo_APNConfig proto.InternalMessageInfo

func (m *APNConfig) GetAPN() *APN {
	if m != nil {
		return m.APN
	}
	return nil
}

func (m *APNConfig) GetNasRanges() []*NASRange {
	if m != nil {
		return m.NasRanges
	}
	return nil
}

type APNAllocation struct {
	NasID                int32    `protobuf:"varint,1,opt,name=NasID,proto3" json:"NasID,omitempty"`
	IMSI                 int64    `protobuf:"varint,2,opt,name=IMSI,proto3" json:"IMSI,omitempty"`
	IMEI                 int64    `protobuf:"varint,3,opt,name=IMEI,proto3" json:"IMEI,omitempty"`
	IP                   string   `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	Created              int64    `protobuf:"varint,5,opt,name=Created,proto3" json:"Created,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *APNAllocation) Reset()         { *m = APNAllocation{} }
func (m *APNAllocation) String() string { return proto.CompactTextString(m) }
func (*APNAllocation) ProtoMessage()    {}
func (*APNAllocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{4}
}

func (m *APNAllocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_APNAllocation.Unmarshal(m, b)
}
func (m *APNAllocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_APNAllocation.Marshal(b, m, deterministic)
}
func (m *APNAllocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_APNAllocation.Merge(m, src)
}
func (m *APNAllocation) XXX_Size() int {
	return xxx_messageInfo_APNAllocation.Size(m)
}
func (m *APNAllocation) XXX_DiscardUnknown() {
	xxx_messageInfo_APNAllocation.DiscardUnknown(m)
}

var xxx_messageInfo_APNAllocation proto.InternalMessageInfo

func (m *APNAllocation) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

func (m *APNAllocation) GetIMSI() int64 {
	if m != nil {
		return m.IMSI
	}
	return 0
}

func (m *APNAllocation) GetIMEI() int64 {
	if m != nil {
		return m.IMEI
	}
	return 0
}

func (m *APNAllocation) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

func (m *APNAllocation) GetCreated() int64 {
	if m != nil {
		return m.Created
	}
	return 0
}

// AddAPNRequest is the request object when creating a new APN.
type AddAPNRequest struct {
	NewAPN               *APN     `protobuf:"bytes,1,opt,name=NewAPN,proto3" json:"NewAPN,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAPNRequest) Reset()         { *m = AddAPNRequest{} }
func (m *AddAPNRequest) String() string { return proto.CompactTextString(m) }
func (*AddAPNRequest) ProtoMessage()    {}
func (*AddAPNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{5}
}

func (m *AddAPNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAPNRequest.Unmarshal(m, b)
}
func (m *AddAPNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAPNRequest.Marshal(b, m, deterministic)
}
func (m *AddAPNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAPNRequest.Merge(m, src)
}
func (m *AddAPNRequest) XXX_Size() int {
	return xxx_messageInfo_AddAPNRequest.Size(m)
}
func (m *AddAPNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAPNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAPNRequest proto.InternalMessageInfo

func (m *AddAPNRequest) GetNewAPN() *APN {
	if m != nil {
		return m.NewAPN
	}
	return nil
}

// AddAPNResponse is the response sent when a new APN is created.
type AddAPNResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAPNResponse) Reset()         { *m = AddAPNResponse{} }
func (m *AddAPNResponse) String() string { return proto.CompactTextString(m) }
func (*AddAPNResponse) ProtoMessage()    {}
func (*AddAPNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{6}
}

func (m *AddAPNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAPNResponse.Unmarshal(m, b)
}
func (m *AddAPNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAPNResponse.Marshal(b, m, deterministic)
}
func (m *AddAPNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAPNResponse.Merge(m, src)
}
func (m *AddAPNResponse) XXX_Size() int {
	return xxx_messageInfo_AddAPNResponse.Size(m)
}
func (m *AddAPNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAPNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAPNResponse proto.InternalMessageInfo

func (m *AddAPNResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// RemoveAPNRequest is the request object for the RemoveAPN method.
type RemoveAPNRequest struct {
	ApnID                int32    `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAPNRequest) Reset()         { *m = RemoveAPNRequest{} }
func (m *RemoveAPNRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveAPNRequest) ProtoMessage()    {}
func (*RemoveAPNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{7}
}

func (m *RemoveAPNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAPNRequest.Unmarshal(m, b)
}
func (m *RemoveAPNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAPNRequest.Marshal(b, m, deterministic)
}
func (m *RemoveAPNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAPNRequest.Merge(m, src)
}
func (m *RemoveAPNRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveAPNRequest.Size(m)
}
func (m *RemoveAPNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAPNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAPNRequest proto.InternalMessageInfo

func (m *RemoveAPNRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

// RemoveAPNResponse is the response object for the RemoveAPN method.
type RemoveAPNResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAPNResponse) Reset()         { *m = RemoveAPNResponse{} }
func (m *RemoveAPNResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveAPNResponse) ProtoMessage()    {}
func (*RemoveAPNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{8}
}

func (m *RemoveAPNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAPNResponse.Unmarshal(m, b)
}
func (m *RemoveAPNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAPNResponse.Marshal(b, m, deterministic)
}
func (m *RemoveAPNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAPNResponse.Merge(m, src)
}
func (m *RemoveAPNResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveAPNResponse.Size(m)
}
func (m *RemoveAPNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAPNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAPNResponse proto.InternalMessageInfo

func (m *RemoveAPNResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

// ListAPNRequest is the request object for the ListAPN method.
type ListAPNRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAPNRequest) Reset()         { *m = ListAPNRequest{} }
func (m *ListAPNRequest) String() string { return proto.CompactTextString(m) }
func (*ListAPNRequest) ProtoMessage()    {}
func (*ListAPNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{9}
}

func (m *ListAPNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPNRequest.Unmarshal(m, b)
}
func (m *ListAPNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPNRequest.Marshal(b, m, deterministic)
}
func (m *ListAPNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPNRequest.Merge(m, src)
}
func (m *ListAPNRequest) XXX_Size() int {
	return xxx_messageInfo_ListAPNRequest.Size(m)
}
func (m *ListAPNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPNRequest proto.InternalMessageInfo

// ListAPNResponse is the response object for the ListAPN method.
type ListAPNResponse struct {
	Result               *Result      `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	APNs                 []*APNConfig `protobuf:"bytes,2,rep,name=APNs,proto3" json:"APNs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListAPNResponse) Reset()         { *m = ListAPNResponse{} }
func (m *ListAPNResponse) String() string { return proto.CompactTextString(m) }
func (*ListAPNResponse) ProtoMessage()    {}
func (*ListAPNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{10}
}

func (m *ListAPNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPNResponse.Unmarshal(m, b)
}
func (m *ListAPNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPNResponse.Marshal(b, m, deterministic)
}
func (m *ListAPNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPNResponse.Merge(m, src)
}
func (m *ListAPNResponse) XXX_Size() int {
	return xxx_messageInfo_ListAPNResponse.Size(m)
}
func (m *ListAPNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPNResponse proto.InternalMessageInfo

func (m *ListAPNResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListAPNResponse) GetAPNs() []*APNConfig {
	if m != nil {
		return m.APNs
	}
	return nil
}

// ReloadAPNRequest is the request object for the ReloadAPN method
type ReloadAPNRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReloadAPNRequest) Reset()         { *m = ReloadAPNRequest{} }
func (m *ReloadAPNRequest) String() string { return proto.CompactTextString(m) }
func (*ReloadAPNRequest) ProtoMessage()    {}
func (*ReloadAPNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{11}
}

func (m *ReloadAPNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReloadAPNRequest.Unmarshal(m, b)
}
func (m *ReloadAPNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReloadAPNRequest.Marshal(b, m, deterministic)
}
func (m *ReloadAPNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReloadAPNRequest.Merge(m, src)
}
func (m *ReloadAPNRequest) XXX_Size() int {
	return xxx_messageInfo_ReloadAPNRequest.Size(m)
}
func (m *ReloadAPNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReloadAPNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReloadAPNRequest proto.InternalMessageInfo

// ReloadAPNResponse is the response object for the ReloadAPN method
type ReloadAPNResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReloadAPNResponse) Reset()         { *m = ReloadAPNResponse{} }
func (m *ReloadAPNResponse) String() string { return proto.CompactTextString(m) }
func (*ReloadAPNResponse) ProtoMessage()    {}
func (*ReloadAPNResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{12}
}

func (m *ReloadAPNResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReloadAPNResponse.Unmarshal(m, b)
}
func (m *ReloadAPNResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReloadAPNResponse.Marshal(b, m, deterministic)
}
func (m *ReloadAPNResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReloadAPNResponse.Merge(m, src)
}
func (m *ReloadAPNResponse) XXX_Size() int {
	return xxx_messageInfo_ReloadAPNResponse.Size(m)
}
func (m *ReloadAPNResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReloadAPNResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReloadAPNResponse proto.InternalMessageInfo

func (m *ReloadAPNResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type AddNASRequest struct {
	ApnID                int32     `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	NewRange             *NASRange `protobuf:"bytes,2,opt,name=NewRange,proto3" json:"NewRange,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddNASRequest) Reset()         { *m = AddNASRequest{} }
func (m *AddNASRequest) String() string { return proto.CompactTextString(m) }
func (*AddNASRequest) ProtoMessage()    {}
func (*AddNASRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{13}
}

func (m *AddNASRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNASRequest.Unmarshal(m, b)
}
func (m *AddNASRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNASRequest.Marshal(b, m, deterministic)
}
func (m *AddNASRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNASRequest.Merge(m, src)
}
func (m *AddNASRequest) XXX_Size() int {
	return xxx_messageInfo_AddNASRequest.Size(m)
}
func (m *AddNASRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNASRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddNASRequest proto.InternalMessageInfo

func (m *AddNASRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *AddNASRequest) GetNewRange() *NASRange {
	if m != nil {
		return m.NewRange
	}
	return nil
}

type AddNASResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddNASResponse) Reset()         { *m = AddNASResponse{} }
func (m *AddNASResponse) String() string { return proto.CompactTextString(m) }
func (*AddNASResponse) ProtoMessage()    {}
func (*AddNASResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{14}
}

func (m *AddNASResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddNASResponse.Unmarshal(m, b)
}
func (m *AddNASResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddNASResponse.Marshal(b, m, deterministic)
}
func (m *AddNASResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddNASResponse.Merge(m, src)
}
func (m *AddNASResponse) XXX_Size() int {
	return xxx_messageInfo_AddNASResponse.Size(m)
}
func (m *AddNASResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddNASResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddNASResponse proto.InternalMessageInfo

func (m *AddNASResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type AddAllocationRequest struct {
	ApnID                int32    `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	NasID                int32    `protobuf:"varint,2,opt,name=NasID,proto3" json:"NasID,omitempty"`
	IMSI                 int64    `protobuf:"varint,3,opt,name=IMSI,proto3" json:"IMSI,omitempty"`
	IP                   string   `protobuf:"bytes,4,opt,name=IP,proto3" json:"IP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAllocationRequest) Reset()         { *m = AddAllocationRequest{} }
func (m *AddAllocationRequest) String() string { return proto.CompactTextString(m) }
func (*AddAllocationRequest) ProtoMessage()    {}
func (*AddAllocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{15}
}

func (m *AddAllocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAllocationRequest.Unmarshal(m, b)
}
func (m *AddAllocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAllocationRequest.Marshal(b, m, deterministic)
}
func (m *AddAllocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAllocationRequest.Merge(m, src)
}
func (m *AddAllocationRequest) XXX_Size() int {
	return xxx_messageInfo_AddAllocationRequest.Size(m)
}
func (m *AddAllocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAllocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddAllocationRequest proto.InternalMessageInfo

func (m *AddAllocationRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *AddAllocationRequest) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

func (m *AddAllocationRequest) GetIMSI() int64 {
	if m != nil {
		return m.IMSI
	}
	return 0
}

func (m *AddAllocationRequest) GetIP() string {
	if m != nil {
		return m.IP
	}
	return ""
}

type AddAllocationResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddAllocationResponse) Reset()         { *m = AddAllocationResponse{} }
func (m *AddAllocationResponse) String() string { return proto.CompactTextString(m) }
func (*AddAllocationResponse) ProtoMessage()    {}
func (*AddAllocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{16}
}

func (m *AddAllocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddAllocationResponse.Unmarshal(m, b)
}
func (m *AddAllocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddAllocationResponse.Marshal(b, m, deterministic)
}
func (m *AddAllocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddAllocationResponse.Merge(m, src)
}
func (m *AddAllocationResponse) XXX_Size() int {
	return xxx_messageInfo_AddAllocationResponse.Size(m)
}
func (m *AddAllocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddAllocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddAllocationResponse proto.InternalMessageInfo

func (m *AddAllocationResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type RemoveNASRequest struct {
	ApnID                int32    `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	NasID                int32    `protobuf:"varint,2,opt,name=NasID,proto3" json:"NasID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNASRequest) Reset()         { *m = RemoveNASRequest{} }
func (m *RemoveNASRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveNASRequest) ProtoMessage()    {}
func (*RemoveNASRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{17}
}

func (m *RemoveNASRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNASRequest.Unmarshal(m, b)
}
func (m *RemoveNASRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNASRequest.Marshal(b, m, deterministic)
}
func (m *RemoveNASRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNASRequest.Merge(m, src)
}
func (m *RemoveNASRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveNASRequest.Size(m)
}
func (m *RemoveNASRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNASRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNASRequest proto.InternalMessageInfo

func (m *RemoveNASRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *RemoveNASRequest) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

type RemoveNASResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveNASResponse) Reset()         { *m = RemoveNASResponse{} }
func (m *RemoveNASResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveNASResponse) ProtoMessage()    {}
func (*RemoveNASResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{18}
}

func (m *RemoveNASResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveNASResponse.Unmarshal(m, b)
}
func (m *RemoveNASResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveNASResponse.Marshal(b, m, deterministic)
}
func (m *RemoveNASResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveNASResponse.Merge(m, src)
}
func (m *RemoveNASResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveNASResponse.Size(m)
}
func (m *RemoveNASResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveNASResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveNASResponse proto.InternalMessageInfo

func (m *RemoveNASResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type ListAPNAllocationsRequest struct {
	ApnID                int32    `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	NasID                int32    `protobuf:"varint,2,opt,name=NasID,proto3" json:"NasID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListAPNAllocationsRequest) Reset()         { *m = ListAPNAllocationsRequest{} }
func (m *ListAPNAllocationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListAPNAllocationsRequest) ProtoMessage()    {}
func (*ListAPNAllocationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{19}
}

func (m *ListAPNAllocationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPNAllocationsRequest.Unmarshal(m, b)
}
func (m *ListAPNAllocationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPNAllocationsRequest.Marshal(b, m, deterministic)
}
func (m *ListAPNAllocationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPNAllocationsRequest.Merge(m, src)
}
func (m *ListAPNAllocationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListAPNAllocationsRequest.Size(m)
}
func (m *ListAPNAllocationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPNAllocationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPNAllocationsRequest proto.InternalMessageInfo

func (m *ListAPNAllocationsRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *ListAPNAllocationsRequest) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

type ListAPNAllocationsResponse struct {
	Result               *Result          `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	Allocations          []*APNAllocation `protobuf:"bytes,2,rep,name=Allocations,proto3" json:"Allocations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ListAPNAllocationsResponse) Reset()         { *m = ListAPNAllocationsResponse{} }
func (m *ListAPNAllocationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListAPNAllocationsResponse) ProtoMessage()    {}
func (*ListAPNAllocationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{20}
}

func (m *ListAPNAllocationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListAPNAllocationsResponse.Unmarshal(m, b)
}
func (m *ListAPNAllocationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListAPNAllocationsResponse.Marshal(b, m, deterministic)
}
func (m *ListAPNAllocationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListAPNAllocationsResponse.Merge(m, src)
}
func (m *ListAPNAllocationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListAPNAllocationsResponse.Size(m)
}
func (m *ListAPNAllocationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListAPNAllocationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListAPNAllocationsResponse proto.InternalMessageInfo

func (m *ListAPNAllocationsResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ListAPNAllocationsResponse) GetAllocations() []*APNAllocation {
	if m != nil {
		return m.Allocations
	}
	return nil
}

type RemoveAPNAllocationRequest struct {
	// APN ID is required and must be set.
	ApnID int32 `protobuf:"varint,1,opt,name=ApnID,proto3" json:"ApnID,omitempty"`
	// NasID is required  and must be set.
	NasID int32 `protobuf:"varint,2,opt,name=NasID,proto3" json:"NasID,omitempty"`
	// IMSI field is required and must be set.
	IMSI                 int64    `protobuf:"varint,3,opt,name=IMSI,proto3" json:"IMSI,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAPNAllocationRequest) Reset()         { *m = RemoveAPNAllocationRequest{} }
func (m *RemoveAPNAllocationRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveAPNAllocationRequest) ProtoMessage()    {}
func (*RemoveAPNAllocationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{21}
}

func (m *RemoveAPNAllocationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAPNAllocationRequest.Unmarshal(m, b)
}
func (m *RemoveAPNAllocationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAPNAllocationRequest.Marshal(b, m, deterministic)
}
func (m *RemoveAPNAllocationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAPNAllocationRequest.Merge(m, src)
}
func (m *RemoveAPNAllocationRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveAPNAllocationRequest.Size(m)
}
func (m *RemoveAPNAllocationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAPNAllocationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAPNAllocationRequest proto.InternalMessageInfo

func (m *RemoveAPNAllocationRequest) GetApnID() int32 {
	if m != nil {
		return m.ApnID
	}
	return 0
}

func (m *RemoveAPNAllocationRequest) GetNasID() int32 {
	if m != nil {
		return m.NasID
	}
	return 0
}

func (m *RemoveAPNAllocationRequest) GetIMSI() int64 {
	if m != nil {
		return m.IMSI
	}
	return 0
}

type RemoveAPNAllocationResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveAPNAllocationResponse) Reset()         { *m = RemoveAPNAllocationResponse{} }
func (m *RemoveAPNAllocationResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveAPNAllocationResponse) ProtoMessage()    {}
func (*RemoveAPNAllocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{22}
}

func (m *RemoveAPNAllocationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveAPNAllocationResponse.Unmarshal(m, b)
}
func (m *RemoveAPNAllocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveAPNAllocationResponse.Marshal(b, m, deterministic)
}
func (m *RemoveAPNAllocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveAPNAllocationResponse.Merge(m, src)
}
func (m *RemoveAPNAllocationResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveAPNAllocationResponse.Size(m)
}
func (m *RemoveAPNAllocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveAPNAllocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveAPNAllocationResponse proto.InternalMessageInfo

func (m *RemoveAPNAllocationResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

type AddUserRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserRequest) Reset()         { *m = AddUserRequest{} }
func (m *AddUserRequest) String() string { return proto.CompactTextString(m) }
func (*AddUserRequest) ProtoMessage()    {}
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{23}
}

func (m *AddUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserRequest.Unmarshal(m, b)
}
func (m *AddUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserRequest.Marshal(b, m, deterministic)
}
func (m *AddUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserRequest.Merge(m, src)
}
func (m *AddUserRequest) XXX_Size() int {
	return xxx_messageInfo_AddUserRequest.Size(m)
}
func (m *AddUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserRequest proto.InternalMessageInfo

func (m *AddUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddUserRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type AddUserResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ApiToken             string   `protobuf:"bytes,3,opt,name=ApiToken,proto3" json:"ApiToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserResponse) Reset()         { *m = AddUserResponse{} }
func (m *AddUserResponse) String() string { return proto.CompactTextString(m) }
func (*AddUserResponse) ProtoMessage()    {}
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{24}
}

func (m *AddUserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserResponse.Unmarshal(m, b)
}
func (m *AddUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserResponse.Marshal(b, m, deterministic)
}
func (m *AddUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserResponse.Merge(m, src)
}
func (m *AddUserResponse) XXX_Size() int {
	return xxx_messageInfo_AddUserResponse.Size(m)
}
func (m *AddUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserResponse proto.InternalMessageInfo

func (m *AddUserResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AddUserResponse) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddUserResponse) GetApiToken() string {
	if m != nil {
		return m.ApiToken
	}
	return ""
}

type AddTokenRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTokenRequest) Reset()         { *m = AddTokenRequest{} }
func (m *AddTokenRequest) String() string { return proto.CompactTextString(m) }
func (*AddTokenRequest) ProtoMessage()    {}
func (*AddTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{25}
}

func (m *AddTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTokenRequest.Unmarshal(m, b)
}
func (m *AddTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTokenRequest.Marshal(b, m, deterministic)
}
func (m *AddTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTokenRequest.Merge(m, src)
}
func (m *AddTokenRequest) XXX_Size() int {
	return xxx_messageInfo_AddTokenRequest.Size(m)
}
func (m *AddTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddTokenRequest proto.InternalMessageInfo

func (m *AddTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type AddTokenResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	ApiToken             string   `protobuf:"bytes,2,opt,name=ApiToken,proto3" json:"ApiToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddTokenResponse) Reset()         { *m = AddTokenResponse{} }
func (m *AddTokenResponse) String() string { return proto.CompactTextString(m) }
func (*AddTokenResponse) ProtoMessage()    {}
func (*AddTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{26}
}

func (m *AddTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddTokenResponse.Unmarshal(m, b)
}
func (m *AddTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddTokenResponse.Marshal(b, m, deterministic)
}
func (m *AddTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddTokenResponse.Merge(m, src)
}
func (m *AddTokenResponse) XXX_Size() int {
	return xxx_messageInfo_AddTokenResponse.Size(m)
}
func (m *AddTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddTokenResponse proto.InternalMessageInfo

func (m *AddTokenResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *AddTokenResponse) GetApiToken() string {
	if m != nil {
		return m.ApiToken
	}
	return ""
}

type RemoveTokenRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=UserId,proto3" json:"UserId,omitempty"`
	ApiToken             string   `protobuf:"bytes,2,opt,name=ApiToken,proto3" json:"ApiToken,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTokenRequest) Reset()         { *m = RemoveTokenRequest{} }
func (m *RemoveTokenRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveTokenRequest) ProtoMessage()    {}
func (*RemoveTokenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{27}
}

func (m *RemoveTokenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTokenRequest.Unmarshal(m, b)
}
func (m *RemoveTokenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTokenRequest.Marshal(b, m, deterministic)
}
func (m *RemoveTokenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTokenRequest.Merge(m, src)
}
func (m *RemoveTokenRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveTokenRequest.Size(m)
}
func (m *RemoveTokenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTokenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTokenRequest proto.InternalMessageInfo

func (m *RemoveTokenRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *RemoveTokenRequest) GetApiToken() string {
	if m != nil {
		return m.ApiToken
	}
	return ""
}

type RemoveTokenResponse struct {
	Result               *Result  `protobuf:"bytes,1,opt,name=Result,proto3" json:"Result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveTokenResponse) Reset()         { *m = RemoveTokenResponse{} }
func (m *RemoveTokenResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveTokenResponse) ProtoMessage()    {}
func (*RemoveTokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_edc174f991dc0a25, []int{28}
}

func (m *RemoveTokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveTokenResponse.Unmarshal(m, b)
}
func (m *RemoveTokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveTokenResponse.Marshal(b, m, deterministic)
}
func (m *RemoveTokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveTokenResponse.Merge(m, src)
}
func (m *RemoveTokenResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveTokenResponse.Size(m)
}
func (m *RemoveTokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveTokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveTokenResponse proto.InternalMessageInfo

func (m *RemoveTokenResponse) GetResult() *Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func init() {
	proto.RegisterType((*Result)(nil), "managementproto.Result")
	proto.RegisterType((*APN)(nil), "managementproto.APN")
	proto.RegisterType((*NASRange)(nil), "managementproto.NASRange")
	proto.RegisterType((*APNConfig)(nil), "managementproto.APNConfig")
	proto.RegisterType((*APNAllocation)(nil), "managementproto.APNAllocation")
	proto.RegisterType((*AddAPNRequest)(nil), "managementproto.AddAPNRequest")
	proto.RegisterType((*AddAPNResponse)(nil), "managementproto.AddAPNResponse")
	proto.RegisterType((*RemoveAPNRequest)(nil), "managementproto.RemoveAPNRequest")
	proto.RegisterType((*RemoveAPNResponse)(nil), "managementproto.RemoveAPNResponse")
	proto.RegisterType((*ListAPNRequest)(nil), "managementproto.ListAPNRequest")
	proto.RegisterType((*ListAPNResponse)(nil), "managementproto.ListAPNResponse")
	proto.RegisterType((*ReloadAPNRequest)(nil), "managementproto.ReloadAPNRequest")
	proto.RegisterType((*ReloadAPNResponse)(nil), "managementproto.ReloadAPNResponse")
	proto.RegisterType((*AddNASRequest)(nil), "managementproto.AddNASRequest")
	proto.RegisterType((*AddNASResponse)(nil), "managementproto.AddNASResponse")
	proto.RegisterType((*AddAllocationRequest)(nil), "managementproto.AddAllocationRequest")
	proto.RegisterType((*AddAllocationResponse)(nil), "managementproto.AddAllocationResponse")
	proto.RegisterType((*RemoveNASRequest)(nil), "managementproto.RemoveNASRequest")
	proto.RegisterType((*RemoveNASResponse)(nil), "managementproto.RemoveNASResponse")
	proto.RegisterType((*ListAPNAllocationsRequest)(nil), "managementproto.ListAPNAllocationsRequest")
	proto.RegisterType((*ListAPNAllocationsResponse)(nil), "managementproto.ListAPNAllocationsResponse")
	proto.RegisterType((*RemoveAPNAllocationRequest)(nil), "managementproto.RemoveAPNAllocationRequest")
	proto.RegisterType((*RemoveAPNAllocationResponse)(nil), "managementproto.RemoveAPNAllocationResponse")
	proto.RegisterType((*AddUserRequest)(nil), "managementproto.AddUserRequest")
	proto.RegisterType((*AddUserResponse)(nil), "managementproto.AddUserResponse")
	proto.RegisterType((*AddTokenRequest)(nil), "managementproto.AddTokenRequest")
	proto.RegisterType((*AddTokenResponse)(nil), "managementproto.AddTokenResponse")
	proto.RegisterType((*RemoveTokenRequest)(nil), "managementproto.RemoveTokenRequest")
	proto.RegisterType((*RemoveTokenResponse)(nil), "managementproto.RemoveTokenResponse")
}

func init() { proto.RegisterFile("management.proto", fileDescriptor_edc174f991dc0a25) }

var fileDescriptor_edc174f991dc0a25 = []byte{
	// 837 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x7f, 0x6f, 0xd3, 0x3c,
	0x10, 0x56, 0x7f, 0xac, 0x6b, 0xaf, 0xda, 0xd6, 0xd7, 0xef, 0x18, 0x59, 0x90, 0x58, 0x67, 0xc6,
	0x54, 0xd8, 0xd4, 0x49, 0x43, 0x08, 0x84, 0x04, 0x22, 0xda, 0x06, 0x8b, 0xb4, 0x85, 0x28, 0x05,
	0x09, 0xa1, 0x09, 0x14, 0x5a, 0x6f, 0x8a, 0x68, 0x93, 0x92, 0x64, 0xdb, 0xc7, 0xe0, 0xbb, 0xf0,
	0x09, 0x51, 0x1c, 0x3b, 0x71, 0x53, 0x27, 0xab, 0x02, 0xff, 0xd9, 0xce, 0xdd, 0xe3, 0xe7, 0xee,
	0x1e, 0xdf, 0x05, 0x3a, 0x13, 0xdb, 0xb5, 0xaf, 0xc8, 0x84, 0xb8, 0x61, 0x7f, 0xea, 0x7b, 0xa1,
	0x87, 0xd6, 0xd2, 0x13, 0x7a, 0x80, 0x5f, 0x42, 0xc3, 0x22, 0xc1, 0xf5, 0x38, 0x44, 0x0a, 0x2c,
	0x0f, 0xae, 0x87, 0x43, 0x12, 0x04, 0x4a, 0xa5, 0x5b, 0xe9, 0x35, 0x2d, 0xbe, 0x45, 0xeb, 0xb0,
	0x74, 0xe2, 0xfb, 0x9e, 0xaf, 0x54, 0xbb, 0x95, 0x5e, 0xcb, 0x8a, 0x37, 0xf8, 0x00, 0x6a, 0x9a,
	0x69, 0x44, 0x1f, 0xb5, 0xa9, 0xab, 0x1f, 0x53, 0xa7, 0x25, 0x2b, 0xde, 0x20, 0x04, 0x75, 0xc3,
	0x9e, 0x10, 0xe6, 0x41, 0xd7, 0xf8, 0x0b, 0x34, 0x0d, 0x6d, 0x60, 0xd9, 0xee, 0x15, 0x89, 0xbc,
	0x0c, 0x3b, 0x48, 0xbd, 0xe8, 0x06, 0xed, 0xc0, 0x4a, 0xb4, 0x18, 0x11, 0x37, 0x74, 0x2e, 0x1d,
	0xc2, 0x2f, 0x9c, 0x3d, 0x8c, 0xb0, 0x8f, 0xf4, 0x63, 0x4b, 0xa9, 0xc5, 0xd8, 0xd1, 0x1a, 0x8f,
	0xa1, 0xa5, 0x99, 0xc6, 0x91, 0xe7, 0x5e, 0x3a, 0x57, 0x68, 0x97, 0x32, 0xa3, 0xd0, 0xed, 0xc3,
	0xf5, 0x7e, 0x26, 0xe4, 0xbe, 0x66, 0x1a, 0x16, 0xa5, 0xfe, 0x02, 0x5a, 0x86, 0x1d, 0x50, 0x42,
	0x81, 0x52, 0xeb, 0xd6, 0x7a, 0xed, 0xc3, 0xcd, 0x39, 0x6b, 0x4e, 0xd9, 0x4a, 0x6d, 0xf1, 0x2d,
	0xac, 0x68, 0xa6, 0xa1, 0x8d, 0xc7, 0xde, 0xd0, 0x0e, 0x1d, 0xcf, 0xcd, 0x09, 0x07, 0x41, 0x5d,
	0x3f, 0x1f, 0xe8, 0x34, 0x8a, 0x9a, 0x45, 0xd7, 0xf1, 0xd9, 0x89, 0x4e, 0xc9, 0xd3, 0xb3, 0x13,
	0x1d, 0xad, 0x42, 0x55, 0x37, 0x95, 0x3a, 0x0d, 0xa7, 0xaa, 0x9b, 0x51, 0x25, 0x8e, 0x7c, 0x62,
	0x87, 0x64, 0xa4, 0x2c, 0x51, 0x33, 0xbe, 0xc5, 0xaf, 0x61, 0x45, 0x1b, 0x8d, 0xa2, 0x00, 0xc8,
	0xcf, 0x6b, 0x12, 0x84, 0x68, 0x1f, 0x1a, 0x06, 0xb9, 0xbd, 0x2b, 0x5a, 0x66, 0x83, 0x35, 0x58,
	0xe5, 0xee, 0xc1, 0xd4, 0x73, 0x03, 0x82, 0x0e, 0x78, 0xf9, 0x99, 0xff, 0xfd, 0x39, 0xff, 0xf8,
	0xb3, 0xc5, 0xcc, 0x70, 0x0f, 0x3a, 0x16, 0x99, 0x78, 0x37, 0x44, 0x20, 0x21, 0x95, 0x00, 0x3e,
	0x86, 0xff, 0x04, 0xcb, 0xb2, 0xf7, 0x75, 0x60, 0xf5, 0xcc, 0x09, 0xc2, 0xf4, 0x36, 0xec, 0xc3,
	0x5a, 0x72, 0x52, 0x12, 0x15, 0xf5, 0xa1, 0xae, 0x99, 0x46, 0xa0, 0x54, 0x69, 0xd1, 0x55, 0x59,
	0xd2, 0x62, 0x2d, 0x59, 0xd4, 0x0e, 0xa3, 0x28, 0xea, 0xb1, 0x67, 0x0b, 0xa9, 0x8f, 0xe3, 0x4b,
	0xce, 0xca, 0xc6, 0x77, 0x41, 0x2b, 0x1a, 0x89, 0xac, 0x28, 0x99, 0xe8, 0x39, 0x34, 0x0d, 0x72,
	0x4b, 0xe5, 0x47, 0xe5, 0x54, 0xa8, 0xd4, 0xc4, 0x94, 0x15, 0x9c, 0xa2, 0x97, 0x25, 0x78, 0x09,
	0xeb, 0x91, 0x66, 0x12, 0xad, 0x17, 0xf3, 0x4c, 0x1e, 0x42, 0x55, 0xf6, 0x10, 0x6a, 0xc2, 0x43,
	0xc8, 0x88, 0x1e, 0x9f, 0xc2, 0xbd, 0xcc, 0x3d, 0x65, 0x19, 0xbf, 0xe1, 0x12, 0xbd, 0x33, 0xab,
	0x52, 0xb6, 0xa9, 0x70, 0xff, 0x2a, 0x6f, 0xef, 0x61, 0x93, 0xc9, 0x34, 0x8d, 0x29, 0x28, 0x43,
	0xe7, 0x57, 0x05, 0x54, 0x19, 0x52, 0x59, 0xed, 0xbf, 0x85, 0xb6, 0x80, 0xc3, 0x9e, 0xc0, 0x43,
	0xd9, 0x13, 0x10, 0x8a, 0x21, 0xba, 0xe0, 0x0b, 0x50, 0x93, 0x97, 0xfd, 0xcf, 0x85, 0x81, 0x0d,
	0x78, 0x20, 0x45, 0x2f, 0x5b, 0x88, 0x57, 0xf4, 0x0d, 0x7c, 0x0a, 0x88, 0xcf, 0x19, 0xf2, 0xe1,
	0x54, 0x49, 0x87, 0x13, 0x9d, 0x71, 0x13, 0xdb, 0x19, 0x27, 0x33, 0x2e, 0xda, 0xe0, 0x1b, 0x58,
	0x4b, 0x7c, 0xcb, 0xe6, 0x7b, 0x03, 0x1a, 0x11, 0x80, 0x3e, 0x62, 0xd0, 0x6c, 0x87, 0x54, 0x68,
	0x6a, 0x53, 0xe7, 0xa3, 0xf7, 0x83, 0xb8, 0x6c, 0x94, 0x25, 0x7b, 0xfc, 0x84, 0xde, 0x4b, 0xd7,
	0x9c, 0x74, 0x0a, 0x53, 0x11, 0x61, 0xf0, 0x37, 0xe8, 0xa4, 0xa6, 0x65, 0x39, 0x8a, 0x5c, 0xaa,
	0x19, 0x2e, 0xa7, 0x80, 0xe2, 0x7a, 0x2c, 0x42, 0xa7, 0x10, 0xe9, 0x1d, 0xfc, 0x3f, 0x83, 0x54,
	0x92, 0xed, 0xe1, 0xef, 0x26, 0x6c, 0x9c, 0x7a, 0xfe, 0x88, 0x9c, 0x27, 0x76, 0x03, 0xe2, 0xdf,
	0x38, 0x43, 0x82, 0x74, 0x68, 0xc4, 0x13, 0x0e, 0x49, 0x14, 0x2d, 0x4e, 0x4e, 0x75, 0x2b, 0xf7,
	0x3b, 0xa3, 0xf5, 0x35, 0x9e, 0xb5, 0xe9, 0x90, 0x7f, 0x2c, 0xf5, 0xc8, 0xea, 0x5f, 0xdd, 0xbd,
	0xcb, 0x8c, 0xe1, 0x5b, 0xd0, 0x4a, 0x74, 0x8e, 0xb6, 0x25, 0x31, 0xcf, 0x4e, 0x59, 0x15, 0x17,
	0x99, 0x88, 0x98, 0x6c, 0x26, 0x49, 0x31, 0x67, 0x67, 0x98, 0x14, 0x33, 0x3b, 0xd2, 0xe2, 0x94,
	0x1a, 0xda, 0x40, 0x9e, 0xd2, 0xb4, 0xc9, 0xca, 0x53, 0x2a, 0x36, 0xd1, 0x24, 0xe4, 0x08, 0x2d,
	0x2f, 0x64, 0x01, 0x10, 0x17, 0x99, 0x30, 0xcc, 0x09, 0xa0, 0xf9, 0xee, 0x88, 0x9e, 0xce, 0x79,
	0xe6, 0x36, 0x63, 0x75, 0x6f, 0x21, 0x5b, 0x76, 0xdd, 0x94, 0x6b, 0x78, 0xf6, 0x07, 0x70, 0x2f,
	0xbf, 0x38, 0xf3, 0x0a, 0xd9, 0x5f, 0xcc, 0x98, 0xdd, 0x78, 0x06, 0xcb, 0x8c, 0x0f, 0xda, 0xca,
	0x63, 0xca, 0x91, 0xbb, 0xf9, 0x06, 0x29, 0x1a, 0xeb, 0x68, 0x48, 0x5a, 0x2e, 0xa1, 0x4f, 0x4a,
	0xd0, 0xb2, 0xcd, 0xf0, 0x03, 0x34, 0x79, 0xf3, 0x41, 0x52, 0x6b, 0xb1, 0x67, 0xa8, 0xdb, 0x05,
	0x16, 0x0c, 0xf0, 0x33, 0xb4, 0x85, 0x16, 0x81, 0x1e, 0xe5, 0x64, 0x6a, 0x06, 0x76, 0xa7, 0xd8,
	0x28, 0x46, 0xfe, 0xde, 0xa0, 0x9f, 0x9e, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xaf, 0xf9,
	0xab, 0x14, 0x0d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HordeManagementServiceClient is the client API for HordeManagementService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HordeManagementServiceClient interface {
	// AddAPN creates a new APN. One or more NASRange elements must be supplied.
	AddAPN(ctx context.Context, in *AddAPNRequest, opts ...grpc.CallOption) (*AddAPNResponse, error)
	// AddAllocation allocates a new IP address for an APN. This is for
	// debugging and diagnostics; usually this is done through the RADISU service.
	AddAllocation(ctx context.Context, in *AddAllocationRequest, opts ...grpc.CallOption) (*AddAllocationResponse, error)
	// RemoveAPN removes an APN. The APN must not contain any allocations or
	// NAS CIDRs when it is deleted. ListAPNAllocations and RemoveAPNAllocation
	// must be used to remove allocations. This might seem cumbersome but it
	// might prevent the operators doing something *really* stupid.
	RemoveAPN(ctx context.Context, in *RemoveAPNRequest, opts ...grpc.CallOption) (*RemoveAPNResponse, error)
	// ReloadAPN reloads the APN and NAS list in memory
	ReloadAPN(ctx context.Context, in *ReloadAPNRequest, opts ...grpc.CallOption) (*ReloadAPNResponse, error)
	// AddNAS adds a NAS CIDR to the APN
	AddNAS(ctx context.Context, in *AddNASRequest, opts ...grpc.CallOption) (*AddNASResponse, error)
	//  RemoveNAS removes a NAS CIDR from an APN. The NAS CIDR cannot contain any
	// allocations.
	RemoveNAS(ctx context.Context, in *RemoveNASRequest, opts ...grpc.CallOption) (*RemoveNASResponse, error)
	// ListAPNAllocations lists all allocations for a particular APN. The first
	// 1000 allocations for that APN is included.
	ListAPNAllocations(ctx context.Context, in *ListAPNAllocationsRequest, opts ...grpc.CallOption) (*ListAPNAllocationsResponse, error)
	// RemoveAPNAllocation removes a single allocation from the APN. The total
	// number of allocations might be in the millions. This might seem
	// cumbersome but it's clunky for a reason. If you try to remove an APN
	// with millions of devices and the APN is still in use you'll be fighting
	// an uphill battle which is *exactly* what you want in that case :)
	RemoveAPNAllocation(ctx context.Context, in *RemoveAPNAllocationRequest, opts ...grpc.CallOption) (*RemoveAPNAllocationResponse, error)
	// ListAPN lists the configured APNs
	ListAPN(ctx context.Context, in *ListAPNRequest, opts ...grpc.CallOption) (*ListAPNResponse, error)
	// AddUser creates a new user in the backend store. This is mostly for
	// M2M users where there's no human on the other side, typically major
	// integrations with Horde. This user can not log in via the regular
	// authentication methods.
	AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error)
	// AddToken adds a new API token to a user created with AddUser. This method
	// will not work with users created through the usual authentication methods.
	AddToken(ctx context.Context, in *AddTokenRequest, opts ...grpc.CallOption) (*AddTokenResponse, error)
	// RemoveToken removes a token from an internal user created with AddUser.
	// Used in combination with AddToken this can be used to rotate API tokens
	// for M2M users.
	RemoveToken(ctx context.Context, in *RemoveTokenRequest, opts ...grpc.CallOption) (*RemoveTokenResponse, error)
}

type hordeManagementServiceClient struct {
	cc *grpc.ClientConn
}

func NewHordeManagementServiceClient(cc *grpc.ClientConn) HordeManagementServiceClient {
	return &hordeManagementServiceClient{cc}
}

func (c *hordeManagementServiceClient) AddAPN(ctx context.Context, in *AddAPNRequest, opts ...grpc.CallOption) (*AddAPNResponse, error) {
	out := new(AddAPNResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/AddAPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) AddAllocation(ctx context.Context, in *AddAllocationRequest, opts ...grpc.CallOption) (*AddAllocationResponse, error) {
	out := new(AddAllocationResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/AddAllocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) RemoveAPN(ctx context.Context, in *RemoveAPNRequest, opts ...grpc.CallOption) (*RemoveAPNResponse, error) {
	out := new(RemoveAPNResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/RemoveAPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) ReloadAPN(ctx context.Context, in *ReloadAPNRequest, opts ...grpc.CallOption) (*ReloadAPNResponse, error) {
	out := new(ReloadAPNResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/ReloadAPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) AddNAS(ctx context.Context, in *AddNASRequest, opts ...grpc.CallOption) (*AddNASResponse, error) {
	out := new(AddNASResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/AddNAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) RemoveNAS(ctx context.Context, in *RemoveNASRequest, opts ...grpc.CallOption) (*RemoveNASResponse, error) {
	out := new(RemoveNASResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/RemoveNAS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) ListAPNAllocations(ctx context.Context, in *ListAPNAllocationsRequest, opts ...grpc.CallOption) (*ListAPNAllocationsResponse, error) {
	out := new(ListAPNAllocationsResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/ListAPNAllocations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) RemoveAPNAllocation(ctx context.Context, in *RemoveAPNAllocationRequest, opts ...grpc.CallOption) (*RemoveAPNAllocationResponse, error) {
	out := new(RemoveAPNAllocationResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/RemoveAPNAllocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) ListAPN(ctx context.Context, in *ListAPNRequest, opts ...grpc.CallOption) (*ListAPNResponse, error) {
	out := new(ListAPNResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/ListAPN", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) AddUser(ctx context.Context, in *AddUserRequest, opts ...grpc.CallOption) (*AddUserResponse, error) {
	out := new(AddUserResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) AddToken(ctx context.Context, in *AddTokenRequest, opts ...grpc.CallOption) (*AddTokenResponse, error) {
	out := new(AddTokenResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/AddToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hordeManagementServiceClient) RemoveToken(ctx context.Context, in *RemoveTokenRequest, opts ...grpc.CallOption) (*RemoveTokenResponse, error) {
	out := new(RemoveTokenResponse)
	err := c.cc.Invoke(ctx, "/managementproto.HordeManagementService/RemoveToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HordeManagementServiceServer is the server API for HordeManagementService service.
type HordeManagementServiceServer interface {
	// AddAPN creates a new APN. One or more NASRange elements must be supplied.
	AddAPN(context.Context, *AddAPNRequest) (*AddAPNResponse, error)
	// AddAllocation allocates a new IP address for an APN. This is for
	// debugging and diagnostics; usually this is done through the RADISU service.
	AddAllocation(context.Context, *AddAllocationRequest) (*AddAllocationResponse, error)
	// RemoveAPN removes an APN. The APN must not contain any allocations or
	// NAS CIDRs when it is deleted. ListAPNAllocations and RemoveAPNAllocation
	// must be used to remove allocations. This might seem cumbersome but it
	// might prevent the operators doing something *really* stupid.
	RemoveAPN(context.Context, *RemoveAPNRequest) (*RemoveAPNResponse, error)
	// ReloadAPN reloads the APN and NAS list in memory
	ReloadAPN(context.Context, *ReloadAPNRequest) (*ReloadAPNResponse, error)
	// AddNAS adds a NAS CIDR to the APN
	AddNAS(context.Context, *AddNASRequest) (*AddNASResponse, error)
	//  RemoveNAS removes a NAS CIDR from an APN. The NAS CIDR cannot contain any
	// allocations.
	RemoveNAS(context.Context, *RemoveNASRequest) (*RemoveNASResponse, error)
	// ListAPNAllocations lists all allocations for a particular APN. The first
	// 1000 allocations for that APN is included.
	ListAPNAllocations(context.Context, *ListAPNAllocationsRequest) (*ListAPNAllocationsResponse, error)
	// RemoveAPNAllocation removes a single allocation from the APN. The total
	// number of allocations might be in the millions. This might seem
	// cumbersome but it's clunky for a reason. If you try to remove an APN
	// with millions of devices and the APN is still in use you'll be fighting
	// an uphill battle which is *exactly* what you want in that case :)
	RemoveAPNAllocation(context.Context, *RemoveAPNAllocationRequest) (*RemoveAPNAllocationResponse, error)
	// ListAPN lists the configured APNs
	ListAPN(context.Context, *ListAPNRequest) (*ListAPNResponse, error)
	// AddUser creates a new user in the backend store. This is mostly for
	// M2M users where there's no human on the other side, typically major
	// integrations with Horde. This user can not log in via the regular
	// authentication methods.
	AddUser(context.Context, *AddUserRequest) (*AddUserResponse, error)
	// AddToken adds a new API token to a user created with AddUser. This method
	// will not work with users created through the usual authentication methods.
	AddToken(context.Context, *AddTokenRequest) (*AddTokenResponse, error)
	// RemoveToken removes a token from an internal user created with AddUser.
	// Used in combination with AddToken this can be used to rotate API tokens
	// for M2M users.
	RemoveToken(context.Context, *RemoveTokenRequest) (*RemoveTokenResponse, error)
}

func RegisterHordeManagementServiceServer(s *grpc.Server, srv HordeManagementServiceServer) {
	s.RegisterService(&_HordeManagementService_serviceDesc, srv)
}

func _HordeManagementService_AddAPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).AddAPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/AddAPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).AddAPN(ctx, req.(*AddAPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_AddAllocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddAllocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).AddAllocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/AddAllocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).AddAllocation(ctx, req.(*AddAllocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_RemoveAPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).RemoveAPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/RemoveAPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).RemoveAPN(ctx, req.(*RemoveAPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_ReloadAPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReloadAPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).ReloadAPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/ReloadAPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).ReloadAPN(ctx, req.(*ReloadAPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_AddNAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddNASRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).AddNAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/AddNAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).AddNAS(ctx, req.(*AddNASRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_RemoveNAS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveNASRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).RemoveNAS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/RemoveNAS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).RemoveNAS(ctx, req.(*RemoveNASRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_ListAPNAllocations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPNAllocationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).ListAPNAllocations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/ListAPNAllocations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).ListAPNAllocations(ctx, req.(*ListAPNAllocationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_RemoveAPNAllocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveAPNAllocationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).RemoveAPNAllocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/RemoveAPNAllocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).RemoveAPNAllocation(ctx, req.(*RemoveAPNAllocationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_ListAPN_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListAPNRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).ListAPN(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/ListAPN",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).ListAPN(ctx, req.(*ListAPNRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).AddUser(ctx, req.(*AddUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_AddToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).AddToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/AddToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).AddToken(ctx, req.(*AddTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HordeManagementService_RemoveToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveTokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HordeManagementServiceServer).RemoveToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/managementproto.HordeManagementService/RemoveToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HordeManagementServiceServer).RemoveToken(ctx, req.(*RemoveTokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HordeManagementService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "managementproto.HordeManagementService",
	HandlerType: (*HordeManagementServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAPN",
			Handler:    _HordeManagementService_AddAPN_Handler,
		},
		{
			MethodName: "AddAllocation",
			Handler:    _HordeManagementService_AddAllocation_Handler,
		},
		{
			MethodName: "RemoveAPN",
			Handler:    _HordeManagementService_RemoveAPN_Handler,
		},
		{
			MethodName: "ReloadAPN",
			Handler:    _HordeManagementService_ReloadAPN_Handler,
		},
		{
			MethodName: "AddNAS",
			Handler:    _HordeManagementService_AddNAS_Handler,
		},
		{
			MethodName: "RemoveNAS",
			Handler:    _HordeManagementService_RemoveNAS_Handler,
		},
		{
			MethodName: "ListAPNAllocations",
			Handler:    _HordeManagementService_ListAPNAllocations_Handler,
		},
		{
			MethodName: "RemoveAPNAllocation",
			Handler:    _HordeManagementService_RemoveAPNAllocation_Handler,
		},
		{
			MethodName: "ListAPN",
			Handler:    _HordeManagementService_ListAPN_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _HordeManagementService_AddUser_Handler,
		},
		{
			MethodName: "AddToken",
			Handler:    _HordeManagementService_AddToken_Handler,
		},
		{
			MethodName: "RemoveToken",
			Handler:    _HordeManagementService_RemoveToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "management.proto",
}
